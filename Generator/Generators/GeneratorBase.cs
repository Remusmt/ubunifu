using System.Reflection;
using System.Text;
using Ubunifu.CommandLineOptions;

using static Ubunifu.FileHelpers;
using static Ubunifu.ConsoleHelper;

public abstract class GeneratorBase {
    protected int Indent = 0;
    protected Type? ModelType;
    protected BaseOptions Options;
    protected bool Success = false;
    protected string RootNameSpace = "";
    protected StringBuilder Content = new();

    public GeneratorBase(BaseOptions options) {
        Options = options;
    }
   
    protected void IncreaseIndentation(int indent = 1) {
        Indent += indent;
    }

    protected void ReduceIndentation(int indent = 1) {
        Indent -= indent;
        if (Indent < 0) Indent = 0;
    }

    protected string GetIndentation() {
        if (Indent == 0)
            return string.Empty;
        return new String('\t', Indent);
    }

    protected void Init() {
        var projectFileNameInfo = GetProjectFile();
        if(projectFileNameInfo == null) 
            throw new Exception("Unable to resolve project");
        WriteInfoMessage(projectFileNameInfo?.Name);
        WriteInfoMessage(projectFileNameInfo?.FullName);


        Content.AppendLine($"//------------------------------------------------------------------------------");
        Content.AppendLine($"// <auto-generated>");
        Content.AppendLine($"//     This code was generated by Ubunifu code generator");
        Content.AppendLine($"//");
        Content.AppendLine($"//     Changes to this file will be lost if the code is regenerated.");
        Content.AppendLine($"//     ");
        Content.AppendLine($"// </auto-generated>");
        Content.AppendLine($"//------------------------------------------------------------------------------");
        Content.AppendLine();
    }

    public abstract (bool Generated, string Name, string Content) Generate();
}